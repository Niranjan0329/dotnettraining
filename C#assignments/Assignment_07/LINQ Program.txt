/*---------Assigment_07 LINQ program-------*/


using System;
using System.Collections.Generic;
using System.Linq;
using System.Runtime.InteropServices;
using System.Runtime.Remoting.Messaging;

namespace Assignment_7
{
    public class Employee

    {
        int EmployeeID;
        string FirstName;
        string LastName;
        string Title;
        DateTime DOB;
        DateTime DOJ;
        string City;


        static void Main(string[] args)
        {
            List<Employee> employee = new List<Employee>();
            employee.Add(new Employee() { EmployeeID = 1001, FirstName = "Malcolm ", LastName = "Daruwalla ", Title = "Manager", DOB = new DateTime(1984, 11, 16), DOJ = new DateTime(2011, 6, 8), City = "Mumbai" });
            employee.Add(new Employee() { EmployeeID = 1002, FirstName = "Asdin ", LastName = " Dhalla ", Title = "AsstManager", DOB = new DateTime(1984, 08, 20), DOJ = new DateTime(2012, 7, 7), City = "Mumbai" });
            employee.Add(new Employee() { EmployeeID = 1003, FirstName = "Madhavi ", LastName = "Oza  ", Title = "Consultant", DOB = new DateTime(1987, 11, 14), DOJ = new DateTime(2015, 4, 12), City = "Pune" });
            employee.Add(new Employee() { EmployeeID = 1004, FirstName = "Saba ", LastName = "Shaikh ", Title = "SE ", DOB = new DateTime(1990, 6, 3), DOJ = new DateTime(2016, 2, 2), City = "Pune" });
            employee.Add(new Employee() { EmployeeID = 1005, FirstName = "Nazia ", LastName = "Shaikh", Title = "SE ", DOB = new DateTime(1992, 3, 8), DOJ = new DateTime(2016, 2, 2), City = "Mumbai" });
            employee.Add(new Employee() { EmployeeID = 1006, FirstName = "Amit  ", LastName = " Pathak ", Title = "Consultant", DOB = new DateTime(1989, 11, 7), DOJ = new DateTime(2014, 8, 8), City = "Chennai" });
            employee.Add(new Employee() { EmployeeID = 1007, FirstName = "Vijay ", LastName = " Natrajan", Title = "Consultant", DOB = new DateTime(1989, 12, 2), DOJ = new DateTime(2015, 6, 1), City = "Mumbai" });
            employee.Add(new Employee() { EmployeeID = 1008, FirstName = "Rahul ", LastName = "Dubey ", Title = "Associate", DOB = new DateTime(1993, 11, 11), DOJ = new DateTime(2014, 11, 6), City = "Chennai" });
            employee.Add(new Employee() { EmployeeID = 1009, FirstName = "Suresh  ", LastName = "Mistry ", Title = "Associate", DOB = new DateTime(1992, 8, 12), DOJ = new DateTime(2014, 2, 3), City = "Chennai" });
            employee.Add(new Employee() { EmployeeID = 1010, FirstName = "Sumit ", LastName = "Shah ", Title = "Manager", DOB = new DateTime(1991, 4, 12), DOJ = new DateTime(2016, 1, 2), City = "Pune" });

            Console.WriteLine("A------*************all the employee**********-------");
            foreach (Employee emp in employee)
            {
                Console.WriteLine("EmployeeID= {0},FirstName= {1},LastName= {2},Title={3},DOB= {4},DOJ= {5},City= {6}", emp.EmployeeID, emp.FirstName, emp.LastName, emp.Title, emp.DOB, emp.DOJ, emp.City);
            }
            Console.WriteLine("B-------***********Display details of all the employee whose location is not Mumbai*****-------");
            IEnumerable<Employee> result = from b in employee
                                           where b.City != "Mumbai"
                                           select b;
            foreach (Employee b1 in result)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
               b1.EmployeeID, b1.FirstName, b1.LastName, b1.Title, b1.DOB, b1.DOJ, b1.City);
            }
            Console.WriteLine("C--------************Display details of all the employee whose title is AsstManager**********--------");
            var Employee = employee.Where(C => C.Title.Equals("AsstManager"));
            foreach (Employee C1 in Employee)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                C1.EmployeeID, C1.FirstName, C1.LastName, C1.Title, C1.DOB, C1.DOJ, C1.City);
            }
            Console.WriteLine("D---------**********Display details of all the employee whose Last Name start with S*******----------");
            var result1 = from D in employee
                          where D.LastName.StartsWith("S")
                          select D;
            foreach (var D1 in result1)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                D1.EmployeeID, D1.FirstName, D1.LastName, D1.Title, D1.DOB, D1.DOJ, D1.City);
            }
            Console.WriteLine("E---------************Display a list of all the employee who have joined before 1/1/2015**********---------");
            List<Employee> E = (from e in employee
                                where e.DOJ > DateTime.Parse("1/1/2015")
                                select e).ToList();
            foreach (Employee E1 in E)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                E1.EmployeeID, E1.FirstName, E1.LastName, E1.Title, E1.DOB, E1.DOJ, E1.City);
            }
            Console.WriteLine("F-------******Display a list of all the employee whose date of birth is after 1/1/1990*****--------");
            List<Employee> F = (from f in employee
                                where f.DOB > DateTime.Parse("1/1/1990")
                                select f).ToList();
            foreach (Employee F1 in F)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
              F1.EmployeeID, F1.FirstName, F1.LastName, F1.Title, F1.DOB, F1.DOJ, F1.City);
            }
            Console.WriteLine("G----------*********Display a list of all the employee whose designation is Consultant and Associate*****--------");
            var g1 = employee.Where(d => (d.Title == "Consultant" || d.Title == "Associate"));

            foreach (Employee G in g1)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                G.EmployeeID, G.FirstName, G.LastName, G.Title, G.DOB, G.DOJ, G.City);
            }
            Console.WriteLine("H---------***********Display total number of employees******---------");
            Console.WriteLine("Number of Employees=" + employee.Count);
            Console.WriteLine("I--------**********Display total number of employees belonging to “Chennai”***********---------");
            var I = employee.Where(i => i.City.Equals("Chennai"));
            foreach (Employee I1 in I)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                I1.EmployeeID, I1.FirstName, I1.LastName, I1.Title, I1.DOB, I1.DOJ, I1.City);
            }
            Console.WriteLine("J---------***********Display highest employee id from the list*********---------");
            Console.WriteLine("Highest employee ID = " + employee.Max(J => J.EmployeeID));
            Console.WriteLine("K---------******** Display total number of employee who have joined after 1/1/2015********---------");
            List<Employee> K = (from j in employee
                                where j.DOJ > DateTime.Parse("1/1/2015")
                                select j).ToList();
            foreach (Employee K1 in K)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                K1.EmployeeID, K1.FirstName, K1.LastName, K1.Title, K1.DOB, K1.DOJ, K1.City);
            }
            Console.WriteLine("L----------********Display total number of employee whose designation is not “Associate”*******--------");
            var l = employee.Where(L => L.Title != ("Associate"));
            foreach (var L1 in l)
            {
                Console.WriteLine("EmployeeID = {0},FirstName = {1},LastName = {2},Title ={3},DOB = {4},DOJ = {5},City = {6}",
                L1.EmployeeID, L1.FirstName, L1.LastName, L1.Title, L1.DOB, L1.DOJ, L1.City);
            }
            Console.WriteLine("M--------************Display total number of employee based on City************---------");
            var M = employee.GroupBy(m => m.City);
            foreach (var M1 in M)
            {
                Console.WriteLine("{1} Employee are based on {0}  ", M1.Key, M1.Count());
            }
            Console.WriteLine("N--------*********Display total number of employee based on city and title********--------");
            var N1 = employee.GroupBy(n => n.City);
            var N2 = employee.GroupBy(n => n.Title);
            Console.WriteLine("Based on City");
            foreach (var n1 in N1)
            {
                Console.WriteLine("{1} Employee are based on {0}  ", n1.Key, n1.Count());
            }
            Console.WriteLine("based on Title");
            foreach (var n2 in N2)
            {
                Console.WriteLine("{1} Employee are based on {0}  ", n2.Key, n2.Count());
            }
            Console.WriteLine("O------------************Display total number of employee who is youngest in the list********-------");
            var max = employee.Max(i => i.DOB);
            var result2 = employee.First(i => i.DOB == max);
            Console.WriteLine("Most youngets in the Employees is  " + max);
            Console.WriteLine();
            Console.ReadKey();
        }
    }
    }




    



